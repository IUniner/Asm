dosbox x
Карниенко 
k3box
k3box@yandex.ru

.model small
.stack 100h
.data
a sw 5
b dw 6
.code
mow ax,@data
mov ds,ax

mov ax,a
add ax,b

mov ax,4c00h
int 21h
end main

mount c d:/Asm
c:
TASM example.asm
TLINK example.obj
example.exe
TD example.exe

small - один сегмент, одна ячейка памяти

db 1  10
dw 2  10 0 = 10+0*256
dd 4 - двойное слово a dd 10  10 0 0 0 0
dq 8
df 6
dt 6
10
a dd ?,30,50,?  ?,30,50,?
a db 10,4 dup(5) 10 5 5 5 5 
s db ' ',"str" 32 's' 't' 'r' - выделение места для слов, строк	

.data
a db 10
b db 20,30
c dw 5,4
d db 12
10 20 30 5 0 4 0 12
0000 0001 ...
MOV AL,a  MOV AL,[0000]

AH,AL - 8
AX,BX,CX,DX - 16
EAX - 32

if(bx,dx) {ax,cx}

вывод ax (не мой)
outint proc
outint1:
	xor cx,cx
	mov bx,10
outint2:
	xor dx,dx ;обнуляем dx
	div bx ;делим ax на bx
	push dx ;dx в стек
	inc cx ; ++cx
	test ax,ax ; CMP ax, (AND ax,ax)  -> ZF 
	jnz outint2 ;ZF == 0 -> outint2
	mov ah,02h
outint3:
	pop dx
	add dl,'0'
	int 21h
	loop outint3

	ret
outint endp

in .code:
call outint


putchar proc 

    mov ah, 02h
    mov dl, char
    int 21h
    ret
putchar endp

printint proc

    mov ax, number
    mov bl, 10
    xor cx, cx
    xor dx, dx
printint_iterator:
    div bl
    inc cx
    
    mov dl, ah
    push dx

    cmp al, 0
    je printint_break
    
    xor ah, ah

    jmp printint_iterator
printint_break:
    pop ax
    xor ah, ah
    add ax, 30h
    call putchar pascal, ax
    loop printint_break
    ret
printint endp